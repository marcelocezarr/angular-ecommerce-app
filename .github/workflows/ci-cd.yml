name: CI/CD â€“ Build, Push & Rollout (Docker Hub + SSH)

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  NAMESPACE: app-demo

  FRONT_DEPLOYMENT: frontend
  FRONT_CONTAINER: app
  BACK_DEPLOYMENT: backend
  BACK_CONTAINER: app

jobs:
  build-and-push:
    name: Build & Push (frontend + backend)
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # ---------- FRONTEND ----------
      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: docker.io/marcelopvdo/frontend:latest,docker.io/marcelopvdo/frontend:${{ github.sha }}
          cache-from: type=gha,scope=frontend
          cache-to: type=gha,mode=max,scope=frontend

      # ---------- BACKEND ----------
      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: docker.io/marcelopvdo/backend:latest,docker.io/marcelopvdo/backend:${{ github.sha }}
          cache-from: type=gha,scope=backend
          cache-to: type=gha,mode=max,scope=backend

  deploy:
    name: Rollout via SSH on EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Add EC2 host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Rollout with SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            alias kubectl='sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl'

            echo ">> Atualizando FRONTEND"
            sudo kubectl set image deployment/frontend frontend=docker.io/marcelopvdo/frontend:latest -n app-demo
            sudo kubectl rollout restart deployment frontend -n app-demo
            
            echo ">> Atualizando BACKEND"
            sudo kubectl rollout restart deployment backend -n app-demo

